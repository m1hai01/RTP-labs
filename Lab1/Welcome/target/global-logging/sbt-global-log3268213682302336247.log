[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\mustu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\mustu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 1.8.0_362)
[debug]       Load.loadUnit: plugins took 313.4578ms
[debug]       Load.loadUnit: defsScala took 0.3979ms
[debug] [Loading] Scanning directory C:\Users\mustu\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mustu\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 47.343901 ms
[debug]           Load.resolveProject(global-plugins) took 100.348099ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\mustu\.sbt\1.0\plugins, plugins: List(<none>))) took 211.1511ms
[debug] [Loading] Done in C:\Users\mustu\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 255.418999ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4997ms
[debug]     Load.loadUnit(file:/C:/Users/mustu/.sbt/1.0/plugins/, ...) took 587.124601ms
[debug]   Load.apply: load took 973.3738ms
[debug]   Load.apply: resolveProjects took 17.697401ms
[debug]   Load.apply: finalTransforms took 155.2416ms
[debug]   Load.apply: config.delegates took 23.782401ms
[debug]   Load.apply: Def.make(settings)... took 715.2067ms
[debug]   Load.apply: structureIndex took 141.7029ms
[debug]   Load.apply: mkStreams took 2.2861ms
[info] loading global plugins from C:\Users\mustu\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4219.546999ms
[debug]           Load.loadUnit: plugins took 59.0996ms
[debug]           Load.loadUnit: defsScala took 0.0073ms
[debug] [Loading] Scanning directory D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome\project
[debug]             Load.loadUnit: mkEval took 20.2906ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.516699 ms
[info] loading settings for project welcome-build from idea.sbt ...
[debug]               Load.resolveProject(welcome-build) took 9.988099ms
[debug]             Load.loadTransitive: finalizeProject(Project(id welcome-build, base: D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome\project, plugins: List(<none>))) took 16.6889ms
[debug] [Loading] Done in D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome\project, returning: (welcome-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 436.094301ms
[debug]           Load.loadUnit: cleanEvalClasses took 24.676399ms
[debug]         Load.loadUnit(file:/D:/UTM/Anul3/SEMESTRUL%202/PTR/Lab1/Welcome/project/, ...) took 524.1206ms
[debug]       Load.apply: load took 527.3611ms
[debug]       Load.apply: resolveProjects took 0.316001ms
[debug]       Load.apply: finalTransforms took 34.1509ms
[debug]       Load.apply: config.delegates took 0.564001ms
[debug]       Load.apply: Def.make(settings)... took 267.1922ms
[debug]       Load.apply: structureIndex took 44.598ms
[debug]       Load.apply: mkStreams took 0.0038ms
[info] loading project definition from D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3626.167001ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome
[debug]       Load.loadUnit: mkEval took 0.376401ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.018001 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 48.051ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome, plugins: List(<none>))) took 55.1314ms
[debug] [Loading] Done in D:\UTM\Anul3\SEMESTRUL 2\PTR\Lab1\Welcome, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 6754.2085ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.1131ms
[debug]   Load.loadUnit(file:/D:/UTM/Anul3/SEMESTRUL%202/PTR/Lab1/Welcome/, ...) took 10400.584399ms
[debug] Load.apply: load took 10405.017501ms
[debug] Load.apply: resolveProjects took 0.1848ms
[debug] Load.apply: finalTransforms took 40.3252ms
[debug] Load.apply: config.delegates took 0.505601ms
[debug] Load.apply: Def.make(settings)... took 138.7175ms
[debug] Load.apply: structureIndex took 29.633ms
[debug] Load.apply: mkStreams took 0.0044ms
[info] set current project to Welcome (in build file:/D:/UTM/Anul3/SEMESTRUL%202/PTR/Lab1/Welcome/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60391 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60391, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Welcome (in build file:/D:/UTM/Anul3/SEMESTRUL%202/PTR/Lab1/Welcome/)
[debug] > Exec(idea-shell, None, None)
